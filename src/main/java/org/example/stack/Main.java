package org.example.stack;import org.example.stack.stack.Stack;public class Main {    public static void main(String[] args) {        Stack stack = new Stack();        System.out.println(stack.push(5)); //true        System.out.println(stack.push(10)); //true        System.out.println(stack.push(5)); //false duplicado//        tope de la pila        System.out.println(stack.peek()); //valor 10//        tamaño de la pila        System.out.println(stack.size());//valor 2//        pop de la pila        System.out.println(stack.pop()); //10        System.out.println(stack.pop());//5        try {            System.out.println(stack.pop());        }catch (IllegalStateException e){            System.out.println(e.getMessage());//"underflow pila vacia        }//        // Crear una pila con un tamaño máximo de 5//        Stack stack = new Stack(5);////        // Imprimir el tamaño de la pila al inicio (debe ser 0)//        System.out.println("Tamaño inicial de la pila: " + stack.size()); // Esperado: 0////        // Hacer push de algunos elementos//        System.out.println("Pushing 10...");//        stack.push(10);//        System.out.println("Tamaño después de push: " + stack.size()); // Esperado: 1//        System.out.println("Elemento en el top: " + stack.peek()); // Esperado: 10////        System.out.println("Pushing 20...");//        stack.push(20);//        System.out.println("Tamaño después de push: " + stack.size()); // Esperado: 2//        System.out.println("Elemento en el top: " + stack.peek()); // Esperado: 20////        System.out.println("Pushing 30...");//        stack.push(30);//        System.out.println("Tamaño después de push: " + stack.size()); // Esperado: 3//        System.out.println("Elemento en el top: " + stack.peek()); // Esperado: 30////        // Hacer pop y verificar el tamaño y el valor//        System.out.println("Popping... valor: " + stack.pop()); // Esperado: 30//        System.out.println("Tamaño después de pop: " + stack.size()); // Esperado: 2//        System.out.println("Elemento en el top: " + stack.peek()); // Esperado: 20////        // Intentar hacer pop de nuevo//        System.out.println("Popping... valor: " + stack.pop()); // Esperado: 20//        System.out.println("Tamaño después de pop: " + stack.size()); // Esperado: 1//        System.out.println("Elemento en el top: " + stack.peek()); // Esperado: 10////        // Hacer un pop más//        System.out.println("Popping... valor: " + stack.pop()); // Esperado: 10//        System.out.println("Tamaño después de pop: " + stack.size()); // Esperado: 0////        // Intentar hacer un pop de una pila vacía (debería lanzar una excepción)//        try {//            System.out.println("Popping de una pila vacía...");//            stack.pop();//        } catch (IllegalStateException e) {//            System.out.println("Excepción esperada: " + e.getMessage()); // Esperado: "UNDERFLOW!!"//        }////        // Hacer un push después de vaciar la pila//        System.out.println("Pushing 40...");//        stack.push(40);//        System.out.println("Tamaño después de push: " + stack.size()); // Esperado: 1//        System.out.println("Elemento en el top: " + stack.peek()); // Esperado: 40////        // Intentar hacer un push cuando la pila está llena//        stack.push(50);//        stack.push(60);//        stack.push(70);//        stack.push(80);//        System.out.println("Pushing 90... (esto debería causar un overflow)");//        stack.push(90); // Debería mostrar "overflow!!!" en la consola    }}